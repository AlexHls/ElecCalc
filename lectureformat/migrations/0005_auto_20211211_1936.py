# Generated by Django 3.2 on 2021-12-11 19:36

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("lectureformat", "0004_device_survey_university"),
    ]

    operations = [
        migrations.CreateModel(
            name="Electronic_Device",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "device_name",
                    models.CharField(
                        max_length=200, verbose_name="Name of the electronic device"
                    ),
                ),
                (
                    "device_power",
                    models.FloatField(verbose_name="Power of the device (W)"),
                ),
                (
                    "davice_consumption",
                    models.FloatField(
                        verbose_name="Energy consumption of the device (kWh)"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Living_Situation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "living_name",
                    models.CharField(
                        max_length=200, verbose_name="Name of the living situation"
                    ),
                ),
                (
                    "living_num_lights",
                    models.PositiveIntegerField(
                        verbose_name="Number of light bulbs in the study area"
                    ),
                ),
                (
                    "living_power",
                    models.FloatField(verbose_name="Average power per light bulb (W)"),
                ),
                (
                    "living_consumption",
                    models.FloatField(
                        verbose_name="Energy consumption per light bulb per hour (kWh/h)"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Streaming",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "streaming_name",
                    models.CharField(
                        max_length=200, verbose_name="Name of the streaming service"
                    ),
                ),
                (
                    "streaming_access_power",
                    models.FloatField(verbose_name="Access - Power (W)"),
                ),
                (
                    "streaming_access_consumption",
                    models.FloatField(
                        verbose_name="Access - Consumption per hour (kWh/h)"
                    ),
                ),
                (
                    "streaming_router_power",
                    models.FloatField(verbose_name="Router - Power (W)"),
                ),
                (
                    "streaming_router_consumption",
                    models.FloatField(
                        verbose_name="Router - Consumption per hour (kWh/h)"
                    ),
                ),
                (
                    "streaming_core_pergb",
                    models.FloatField(
                        verbose_name="Core network - Energy consumption per GB data consumption (kWh/GB)"
                    ),
                ),
                (
                    "streaming_core_data",
                    models.FloatField(
                        verbose_name="Core network - Data consumption per hour (GB/h)"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transportation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transport_name",
                    models.CharField(
                        max_length=200, verbose_name="Name of means of transportation"
                    ),
                ),
                (
                    "transport_conv_fact",
                    models.FloatField(
                        verbose_name="Conversion factor from CO_2 emitted to energy consumed (kWh/kg)"
                    ),
                ),
                (
                    "transport_dist",
                    models.FloatField(
                        verbose_name="Conversion factor from minutes travelled to kilometers traveled (km/min)"
                    ),
                ),
                (
                    "trasport_consumption",
                    models.FloatField(
                        verbose_name="Energy consumption per distance (kWh/km)"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Video_On_Demand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vod_name",
                    models.CharField(
                        max_length=200, verbose_name="Name of the VoD service"
                    ),
                ),
                (
                    "vod_access_power",
                    models.FloatField(verbose_name="Access - Power (W)"),
                ),
                (
                    "vod_access_consumption",
                    models.FloatField(
                        verbose_name="Access - Consumption per hour (kWh/h)"
                    ),
                ),
                (
                    "vod_router_power",
                    models.FloatField(verbose_name="Router - Power (W)"),
                ),
                (
                    "vod_router_consumption",
                    models.FloatField(
                        verbose_name="Router - Consumption per hour (kWh/h)"
                    ),
                ),
                (
                    "vod_core_pergb",
                    models.FloatField(
                        verbose_name="Core network - Energy consumption per GB data consumption (kWh/GB)"
                    ),
                ),
                (
                    "vod_core_data",
                    models.FloatField(
                        verbose_name="Core network - Data consumption per hour (GB/h)"
                    ),
                ),
                (
                    "vod_data_center_power",
                    models.FloatField(
                        verbose_name="Data center - Power per TB data consumption (W/TB)"
                    ),
                ),
                (
                    "vod_data_center_data",
                    models.FloatField(
                        verbose_name="Data center - Data consumption per hour (TB/h)"
                    ),
                ),
                (
                    "vod_data_center_consumption",
                    models.FloatField(
                        verbose_name="Data center - Energy consumption per hour (kWh/h)"
                    ),
                ),
            ],
        ),
        migrations.DeleteModel(
            name="Device",
        ),
        migrations.RemoveField(
            model_name="lecturehall",
            name="air_conditioning",
        ),
        migrations.RemoveField(
            model_name="lecturehall",
            name="light_count",
        ),
        migrations.RemoveField(
            model_name="lecturehall",
            name="light_power",
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="amplifier_consumption",
            field=models.FloatField(
                default=0,
                verbose_name="Amplifier - Consumption per amplifier per hour (kWh/h)",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="amplifier_count",
            field=models.PositiveIntegerField(
                default=0, verbose_name="Amplifier - Number of amplifiers"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="amplifier_power",
            field=models.FloatField(
                default=0, verbose_name="Amplifier - Power per amplifier (W)"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="beamer_consumption",
            field=models.FloatField(
                default=0,
                verbose_name="Beamer - Consumption per beamer per hour (kWh/h)",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="beamer_count",
            field=models.PositiveIntegerField(
                default=0, verbose_name="Beamer - Number of beamers"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="cam_consumption",
            field=models.FloatField(
                default=0,
                verbose_name="Camera - Consumption per camera per hour (kWh/h)",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="cam_count",
            field=models.PositiveIntegerField(
                default=0, verbose_name="Camera - Number of cameras"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="cam_power",
            field=models.FloatField(
                default=0, verbose_name="Camera - Power per camera (W)"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="light_blacboard_consumption",
            field=models.FloatField(
                default=0,
                verbose_name="Light bulbs: Blackboard - Average consumption per light bulb (kWh/h)",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="light_blackboard_count",
            field=models.PositiveIntegerField(
                default=0,
                verbose_name="Light bulbs: Blackboard - Number of light bulbs",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="light_blackboard_power",
            field=models.FloatField(
                default=0,
                verbose_name="Light bulbs: Blackboard - Power per light bulb (W)",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="light_stairs_consumption",
            field=models.FloatField(
                default=0,
                verbose_name="Light bulbs: Stairs - Average consumption per light bulb per hour (kWh/h)",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="light_stairs_count",
            field=models.PositiveIntegerField(
                default=0, verbose_name="Light bulbs: Stairs - Number of light bulbs"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="light_stairs_power",
            field=models.FloatField(
                default=0, verbose_name="Light bulbs: Stairs - Power per light bulb (W)"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="mic_consumption",
            field=models.FloatField(
                default=0,
                verbose_name="Microphone - Consumption per microphone per hour (kWh/h)",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="mic_count",
            field=models.PositiveIntegerField(
                default=0, verbose_name="Microphone - Number of microphones"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="mic_power",
            field=models.FloatField(
                default=0, verbose_name="Microphone - Power per microphone (W)"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="other",
            field=models.FloatField(
                default=0, verbose_name="Other energy consuming sources (kWh/h)"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="lecturehall",
            name="seating_capacity_distancing",
            field=models.PositiveIntegerField(
                default=0,
                verbose_name="Number of available seats with social distancing",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="lecturehall",
            name="beamer_power",
            field=models.FloatField(verbose_name="Beamer - Power per beamer (W)"),
        ),
        migrations.AlterField(
            model_name="survey",
            name="survey_file",
            field=models.FileField(upload_to="data"),
        ),
    ]
